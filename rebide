#!/bin/bash

# Rails Development Environment Setup Script
# Sets up tmux, docker services, Sublime Text, and Chrome with custom profile
# Generic version for any Rails project

set -e

# Get project name from current directory
PROJECT_NAME=$(basename "$PWD")

echo "üöÄ Starting $PROJECT_NAME development environment..."

# Function to check if command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Check required commands
echo "üìã Checking dependencies..."
for cmd in tmux docker subl google-chrome; do
    if ! command_exists "$cmd"; then
        echo "‚ùå Error: $cmd is not installed or not in PATH"
        echo "Please install $cmd and try again"
        exit 1
    fi
done

# Read Chrome profile and URL from .chrome-profile file
CHROME_PROFILE_FILE="$PWD/.chrome-profile"
CHROME_PROFILE=""
CHROME_URL="http://localhost:3000"
if [ -f "$CHROME_PROFILE_FILE" ]; then
    CHROME_PROFILE=$(head -n 1 "$CHROME_PROFILE_FILE" | tr -d '\n\r')
    echo "üìÅ Using Chrome profile: $CHROME_PROFILE"

    # Check if there's a second line for URL
    if [ $(wc -l < "$CHROME_PROFILE_FILE") -ge 2 ]; then
        CHROME_URL=$(sed -n '2p' "$CHROME_PROFILE_FILE" | tr -d '\n\r')
        echo "üåê Using custom URL: $CHROME_URL"
    else
        echo "üåê Using default URL: $CHROME_URL"
    fi
else
    echo "üìÅ No .chrome-profile file found, skipping Chrome"
    echo "üí° Create a .chrome-profile file with your desired profile name (e.g., 'Profile 1')"
    echo "üí° Optionally add a second line with a custom URL (defaults to http://localhost:3000)"
fi

# Find docker-compose.yml (check current folder, then parent folder)
DOCKER_COMPOSE_DIR=""
if [ -f "$PWD/docker-compose.yml" ]; then
    DOCKER_COMPOSE_DIR="$PWD"
    echo "üê≥ Found docker-compose.yml in current directory"
elif [ -f "$PWD/../docker-compose.yml" ]; then
    DOCKER_COMPOSE_DIR="$PWD/.."
    echo "üê≥ Found docker-compose.yml in parent directory"
else
    echo "‚ö†Ô∏è  No docker-compose.yml found, skipping Docker services"
fi

# Start Docker services if docker-compose.yml was found
if [ -n "$DOCKER_COMPOSE_DIR" ]; then
    echo "üê≥ Starting Docker services (database and Redis)..."
    docker compose -f "$DOCKER_COMPOSE_DIR/docker-compose.yml" up -d
fi

# Wait a moment for services to be ready
echo "‚è≥ Waiting for services to start..."
sleep 3

# Kill existing tmux session if it exists
if tmux has-session -t "$PROJECT_NAME" 2>/dev/null; then
    echo "üîÑ Killing existing tmux session '$PROJECT_NAME'..."
    tmux kill-session -t "$PROJECT_NAME"
fi

# Create new tmux session
echo "üì∫ Creating tmux session '$PROJECT_NAME'..."
tmux new-session -d -s "$PROJECT_NAME" -n main

# Split the window into 3 panes
# Pane 0: claude (top left)
# Pane 1: bash (top right)
# Pane 2: bin/dev (bottom full width)

# Create vertical split (top and bottom)
tmux split-window -v -t "$PROJECT_NAME":main

# Split the top pane horizontally (left and right)
tmux split-window -h -t "$PROJECT_NAME":main.0

# Now we have 3 panes:
# Pane 0 (top left): will run claude
# Pane 1 (top right): bash console
# Pane 2 (bottom): will run bin/dev

# Configure panes
echo "‚öôÔ∏è  Configuring tmux panes..."

# Pane 0: Run claude (top left)
tmux send-keys -t "$PROJECT_NAME":main.0 'echo "Starting Claude Code..."' Enter
tmux send-keys -t "$PROJECT_NAME":main.0 'claude' Enter

# Pane 1: Regular bash console (top right)
tmux send-keys -t "$PROJECT_NAME":main.1 'echo "Ready for commands..."' Enter
tmux send-keys -t "$PROJECT_NAME":main.1 'clear' Enter

# Pane 2: Run bin/dev (bottom)
tmux send-keys -t "$PROJECT_NAME":main.2 'echo "Starting Rails development server..."' Enter
tmux send-keys -t "$PROJECT_NAME":main.2 'bin/dev' Enter

# Start Sublime Text
echo "üìù Opening Sublime Text..."
subl "$PWD" &

# Start Chrome with custom profile (only if .chrome-profile exists)
if [ -n "$CHROME_PROFILE" ]; then
    echo "üåê Opening Chrome with profile: $CHROME_PROFILE at $CHROME_URL..."
    google-chrome \
        --profile-directory="$CHROME_PROFILE" \
        --new-window \
        --no-first-run \
        --no-default-browser-check \
        "$CHROME_URL" &
fi

# Wait a moment for applications to start
sleep 2

# Attach to tmux session
echo "‚úÖ Environment ready! Attaching to tmux session..."
echo ""
echo "Tmux panes:"
echo "  - Top left: Claude Code"
echo "  - Top right: Bash console"
echo "  - Bottom: Rails development server (bin/dev)"
echo ""
if [ -n "$CHROME_PROFILE" ]; then
    echo "Chrome profile: $CHROME_PROFILE"
    echo ""
fi
echo "To detach from tmux: Ctrl+B, then D"
echo "To reattach later: tmux attach -t $PROJECT_NAME"
echo ""

tmux attach -t "$PROJECT_NAME"